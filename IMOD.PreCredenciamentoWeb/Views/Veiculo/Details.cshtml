@model IMOD.PreCredenciamentoWeb.Models.VeiculoViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Veículo</h3>
@using (Html.BeginForm("Edit", "Veiculo", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="table-wrapper">
    <div class="table-title">
        <div class="row">
            <div class="col-sm-8">
                <h2>Cadastro de <b>Veículos</b></h2>
            </div>
            <div class="col-sm-4">
                <a href="~/Veiculo/Index" class="submit btn btn-danger"><i class="fa fa-fw fa-sign-in"></i> <span>Voltar</span></a>
            </div>
        </div>
    </div>
    <fieldset class="form-horizontal">


        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item active">
                <a class="nav-link" id="link1" data-toggle="tab" href="#home" role="tab" aria-controls="home"
                   aria-selected="true">Identificação</a>
            </li>
            <li class="nav-item">
                <a class="disabled" id="link2" data-toggle="tab" href="#profile" role="tab" aria-controls="profile"
                   aria-selected="false">Especificações</a>
            </li>
            <li class="nav-item">
                <a class="disabled" id="link3" data-toggle="tab" href="#vinculo" role="tab" aria-controls="vinculo"
                   aria-selected="false">Vínculo</a>
            </li>
            <li class="nav-item">
                <a class="disabled" id="link4" data-toggle="tab" href="#seguros" role="tab" aria-controls="seguros"
                   aria-selected="false">Seguros</a>
            </li>
        </ul>

        <div class="tab-content" id="myTabContent">
            <div class=" tab-pane active" id="home" role="tabpanel" aria-labelledby="home-tab">
                <br />
                <div class="form-group">

                    @Html.LabelFor(model => model.TipoEquipamentoVeiculoId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.Tipo, ((SelectList)ViewBag.TipoVeiculo).Select(option => new SelectListItem
                   {
                       Text = option.Text,
                       Value = option.Value.ToString(),
                       Selected = (Model != null) && (option.Text == Model.Tipo)
                   }), "Selecione", new { @class = "form-control text-uppercase", id = "ddlTipo", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayTextFor(model => model.Descricao)
                    </div>


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PlacaIdentificador, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayTextFor(model => model.PlacaIdentificador)
                    </div>

                    @Html.LabelFor(model => model.SerieChassi, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayTextFor(model => model.SerieChassi)
                    </div>


                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Frota, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayTextFor(model => model.Frota)
                    </div>

                    @Html.LabelFor(model => model.Patrimonio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayTextFor(model => model.Patrimonio)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayTextFor(model => model.Marca)
                    </div>
                    @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayTextFor(model => model.Modelo)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Licenciamento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayTextFor(model => model.Licenciamento)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NomeArquivoAnexo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DisplayTextFor(model => model.NomeArquivoAnexo)
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                <br />
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Ano, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-1">
                        @Html.DisplayTextFor(model => model.Ano)
                    </div>

                    @Html.LabelFor(model => model.CombustivelId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.CombustivelId, ((IEnumerable<IMOD.Domain.Entities.TipoCombustivel>)ViewBag.TipoCombustivel).Select(option => new SelectListItem
                   {
                       Text = option.Descricao,
                       Value = option.TipoCombustivelId.ToString(),
                       Selected = (Model != null) && (option.TipoCombustivelId == Model.CombustivelId)
                   }), "Selecione", new { @class = "form-control text-uppercase", id = "ddlCombustivel", @disabled = "disabled" })
                    </div>

                    @Html.LabelFor(model => model.Cor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DisplayTextFor(model => model.Cor)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Altura, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DisplayTextFor(model => model.Altura)
                    </div>

                    @Html.LabelFor(model => model.Comprimento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DisplayTextFor(model => model.Comprimento)
                    </div>

                    @Html.LabelFor(model => model.Largura, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DisplayTextFor(model => model.Largura)

                    </div>
                </div>

                <div div class="form-group">
                    @Html.LabelFor(model => model.EstadoId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.EstadoId, ((IEnumerable<IMOD.Domain.Entities.Estados>)ViewBag.Estados).Select(option => new SelectListItem
                   {
                       Text = option.Nome,
                       Value = option.EstadoId.ToString(),
                       Selected = (Model != null) && (option.EstadoId == Model.EstadoId)
                   }), "Selecione", new { @class = "form-control text-uppercase", id = "ddlEstado", @disabled = "disabled" })
                    </div>
                </div>

                <div div class="form-group">
                    @Html.LabelFor(model => model.MunicipioId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.MunicipioId, ((IEnumerable<IMOD.Domain.Entities.Municipio>)ViewBag.Municipio).Select(option => new SelectListItem
                   {
                       Text = option.Nome,
                       Value = option.MunicipioId.ToString(),
                       Selected = (Model != null) && (option.MunicipioId == Model.MunicipioId)
                   }), "Selecione", new { @class = "form-control text-uppercase", id = "ddlMunicipio", @disabled = "disabled" })
                    </div>
                </div>

            </div>
            <div class="tab-pane fade" id="vinculo" role="tabpanel" aria-labelledby="vinculo-tab">
                <br />
                <div class="form-group  col-lg-12" style="padding-left: 60px">

                    <div>

                        @Html.Label("Área de Manobra?", htmlAttributes: new { @class = "control-label", @style = "padding-right: 24px" })
                        @Html.CheckBox("Área de Manobra?", htmlAttributes: new { id = "chkAreaManobra", @disabled = "disabled" })
                    </div>
                </div>

                <div div class="form-group">
                    <div>
                        @Html.LabelFor(model => model.ContratoEmpresaID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-3">
                            @Html.DropDownListFor(model => model.ContratoEmpresaID, ((IEnumerable<IMOD.Domain.Entities.EmpresaContrato>)ViewBag.Contratos).Select(option => new SelectListItem
                       {
                           Text = option.Descricao,
                           Value = option.EmpresaContratoId.ToString(),
                           Selected = (Model != null) && (option.EmpresaContratoId.ToString() == Model.ContratoEmpresaID)
                       }), "Selecione", new { @class = "form-control text-uppercase", id = "ddlContrato", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <fieldset>
                    <legend> Contratos Selecionados</legend>
                    <div class="row">
                        <div class="col-lg-2"><b>Matrícula</b></div>
                        <div class="col-lg-9"><b>Contrato</b></div>
                        <div class="col-lg-1"></div>
                    </div>
                    <div class="row" id="divContrato">
                        @foreach (var item in ((IEnumerable<IMOD.PreCredenciamentoWeb.Models.VeiculoEmpresaViewModel>)ViewBag.ContratosSelecionados))
                        {
                            <div class="col-lg-2">@item.Matricula</div>
                            <div class="col-lg-10 text-uppercase">@item.Descricao</div>
                            <br />
                        }
                    </div>
                </fieldset>
            </div>
            <div class=" tab-pane fade" id="seguros" role="tabpanel" aria-labelledby="seguro-tab">
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.NomeSeguradora, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DisplayTextFor(model => model.NomeSeguradora)
                    </div>

                    @Html.LabelFor(model => model.NumeroApolice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DisplayTextFor(model => model.NumeroApolice)
                    </div>


                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ValorCobertura, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DisplayTextFor(model => model.ValorCobertura)
                    </div>

                    @Html.LabelFor(model => model.Emissao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DisplayTextFor(model => model.Emissao)
                    </div>
                    @Html.LabelFor(model => model.Validade, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DisplayTextFor(model => model.Validade)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NomeArquivo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DisplayTextFor(model => model.NomeArquivo)
                    </div>
                </div>

            </div>
        </div>
    </fieldset>
</div>
}


