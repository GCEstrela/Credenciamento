@model IMOD.PreCredenciamentoWeb.Models.VeiculoViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Colaborador</h3>
@using (Html.BeginForm("Create", "Veiculo", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row">
                <div class="col-sm-8">
                    <h2>Cadastro de <b>Veiculos</b></h2>
                </div>
                <div class="col-sm-4">
                    <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> <span>Salvar Veiculo</span></button>
                    <a href="Index" class="submit btn btn-danger"><i class="fa fa-fw fa-sign-in"></i> <span>Cancelar</span></a>
                </div>
            </div>
        </div>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item active">
                    <a class="nav-link" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home"
                       aria-selected="true">Identificação</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile"
                       aria-selected="false">Especificações</a>
                </li>
                @*<li class="nav-item">
                        <a class="nav-link" id="caracteristicas-tab" data-toggle="tab" href="#caracteristicas" role="tab" aria-controls="caracteristicas"
                           aria-selected="false">Caraterísticas</a>
                    </li>*@
                <li class="nav-item">
                    <a class="nav-link" id="vinculo-tab" data-toggle="tab" href="#vinculo" role="tab" aria-controls="vinculo"
                       aria-selected="false">Vínculo</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="seguro-tab" data-toggle="tab" href="#seguros" role="tab" aria-controls="seguros"
                       aria-selected="false">Seguros</a>
                </li>
            </ul>

            <div class="tab-content" id="myTabContent">
                <div class=" tab-pane active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.RadioVeiculoEquip, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1">
                            @Html.RadioButtonFor(model => model.RadioVeiculoEquip, "Veículo", new { @checked = "checked", htmlAttributes = new { @class = "form-control text-uppercase checked" } })
                            @Html.ValidationMessageFor(model => model.RadioVeiculoEquip, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.RadioEquipamento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1">
                            @Html.RadioButtonFor(model => model.RadioVeiculoEquip, "Equipamento", new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.RadioVeiculoEquip, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                        </div>


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PlacaIdentificador, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.PlacaIdentificador, "Placa/Identificador", new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.PlacaIdentificador, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.SerieChassi, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.SerieChassi, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.SerieChassi, "", new { @class = "text-danger" })
                        </div>


                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Frota, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Frota, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Frota, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.Patrimonio, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Patrimonio, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Patrimonio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Licenciamento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Licenciamento, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Licenciamento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FileUpload, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            <input type="file" name="FileUpload" id="FileUpload" accept=".pdf" />
                            @Html.ValidationMessageFor(model => model.FileUpload, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                    <br />
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.idTipoServicoVinculados, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.idTipoServicoVinculados, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                @Html.ValidationMessageFor(model => model.idTipoServicoVinculados, "", new { @class = "text-danger" })
                            </div>
                        </div>*@


                    <div class="form-group">
                        @Html.LabelFor(model => model.Ano, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Ano, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Ano, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CombustivelId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.CombustivelId, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.CombustivelId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Altura, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Altura, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Altura, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Comprimento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Comprimento, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Comprimento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Largura, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Largura, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Largura, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Cor, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Cor, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div div class="form-group">
                        @Html.LabelFor(model => model.EstadoId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.EstadoId, ((IEnumerable<IMOD.Domain.Entities.Estados>)ViewBag.Estados).Select(option => new SelectListItem
                       {
                           Text = option.Nome,
                           Value = option.EstadoId.ToString(),
                           Selected = (Model != null) && (option.EstadoId == Model.EstadoId)
                       }), "Selecione", new { @class = "form-control text-uppercase" })
                            @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MunicipioId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.MunicipioId, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.MunicipioId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="tab-pane fade" id="vinculo" role="tabpanel" aria-labelledby="vinculo-tab">
                    <br />
                    <div class="form-group  col-lg-12" style="padding-left: 60px">

                        <div>

                            @Html.Label("Área de Manobra?", htmlAttributes: new { @class = "control-label", @style = "padding-right: 24px" })
                            @Html.CheckBox("Área de Manobra?", htmlAttributes: new { @id = "chkAreaManobra" })
                        </div>
                    </div>

                    <div div class="form-group">
                        <div>
                            @Html.LabelFor(model => model.ContratoEmpresaID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-lg-3">
                                @Html.DropDownListFor(model => model.ContratoEmpresaID, ((IEnumerable<IMOD.Domain.Entities.EmpresaContrato>)ViewBag.Contratos).Select(option => new SelectListItem
                           {
                               Text = option.Descricao,
                               Value = option.EmpresaContratoId.ToString(),
                               Selected = (Model != null) && (option.EmpresaContratoId.ToString() == Model.ContratoEmpresaID)
                           }), "Selecione", new { @class = "form-control text-uppercase", @id = "ddlContrato" })
                                @Html.ValidationMessageFor(model => model.ContratoEmpresaID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-7">
                                @*//href="@Url.Action("AdicionarContrato")"*@
                                <a title="Vincular Contrato" id="btContrato" href="#">
                                    <i class="material-icons">&#xE147;</i>
                                </a>
                            </div>
                        </div>
                    </div>
                    <br />
                    <fieldset>
                        <legend> Contratos Selecionados</legend>
                        <div class="row">
                            <div class="col-lg-2"><b>Matrícula</b></div>
                            <div class="col-lg-9"><b>Contrato</b></div>
                            <div class="col-lg-1"></div>
                        </div>
                        <div class="row" id="divContrato">
                            @foreach (var item in ((IEnumerable<IMOD.PreCredenciamentoWeb.Models.VeiculoEmpresaViewModel>)ViewBag.ContratosSelecionados))
                            {
                                <div class="col-lg-2">@item.Matricula</div>
                                <div class="col-lg-9 text-uppercase">@item.Descricao</div>
                                <div class="col-lg-1">
                                    <a title="Vincular Contrato" id=@item.EmpresaContratoId href="#" class="btnRemover" onclick="RemoverContrato(this)">
                                        <i class="material-icons danger">&#xE15C;</i>
                                    </a>
                                </div>
                                <br />
                            }
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>


    </div>
}
@section Scripts {
    <script>
        $(document).ready(function () {
            //evento do botão incluir contrato
            $("#btContrato").click(function () {
                var id = $("#ddlContrato").val();
                var areaManobra = $('#chkAreaManobra').is(':checked');
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AdicionarContrato")',
                    data: {
                        id: id,
                        flagAreaManobra: areaManobra
                    },
                    success: function (result) {
                        var html = '';
                        $.each(result, function (key, item) {
                            html += '<div class="col-lg-2">' + item.Matricula + '</div>';
                            html += '<div class="col-lg-9">' + item.Descricao  + '</div>';
                            html += '<div class="col-lg-1"><a class="btnRemover" title="Remover Contrato" id=' + item.EmpresaContratoId + ' onclick="RemoverContrato(this)"><i class="material-icons danger">&#xE15C;</i></a></div>';
                        });
                        $('#divContrato').html('');
                        $('#divContrato').append(html);
                        $("#ddlContrato").val('');
                        $("#chkAreaManobra").attr('checked', false);
                        console.log(result);

                    },
                    error: function (result) {
                        Alert(result);
                    }
                });
                });
            });

    //evento do botão incluir serviço
    $("#btServico").click(function () {
    var id = $("#ddlServico").val();
    $.ajax({
    type: "POST",
    url: '@Url.Action("AdicionarServico")',
    data: {
    id: id
    },
    success: function (result) {
    var html = '';
    $.each(result, function (key, item) {
        html += '<div class="col-lg-1"><a class="btnRemover" title="Remover Serviço" id=' + item.TipoServicoId + ' onclick="RemoverServico(this)"><i class="material-icons danger">&#xE15C;</i></a></div>';
        html += '<div class="col-lg-2 text-uppercase">' + item.Descricao + '</div>';

    });
    $('#divServico').html('');
    $('#divServico').append(html);
    $("#divServico").val('');
    },
    error: function (result) {
    Alert(result);
    }
    });
    });

         function RemoverContrato(it)
            {
             var id = it.id;
               $.ajax({
                   type: "POST",
                   url: '@Url.Action("RemoverContrato")',
                   data: { id: id },
                   success: function (result) {
                       var html = '';
                       $.each(result, function (key, item) {
                           html += '<div class="col-lg-2">' + item.Matricula + '</div>';
                           html += '<div class="col-lg-2 text-uppercase">' + item.Descricao + '</div>';
                           html += '<div class="col-lg-1"><a class="btnRemoverContrato" title="Remover Contrato" id=' + item.EmpresaContratoId + ' onclick="RemoverContrato(this)"><i class="material-icons danger">&#xE15C;</i></a></div>';

                       });
                       $('#divContrato').html('');
                       $('#divContrato').append(html);
                       console.log(result);
                   },
                   error: function (result) {

                   }
                 });
        };
    </script>

    <script>

        $('[id^=link]').click(function () {

            var id = $(this).attr('id');

            var campoCpf = document.getElementById("Cpf").value;
            var campoNome = document.getElementById("Nome").value;
            var campoApelido = document.getElementById("Apelido").value;

            var campoCep = document.getElementById("Cep").value;
            var campoEndereco = document.getElementById("Endereco").value;
            var campoBairro = document.getElementById("ddlBairro").value;
            var campoNumero = document.getElementById("Numero").value;
            var campoEstadoId = document.getElementById("ddlEstado").value;
            var campoMunicipioId = document.getElementById("ddlMunicipio").value;

            var campoContatoEmergencia = document.getElementById("ContatoEmergencia").value;
            var campoTelefoneEmergencia = document.getElementById("TelefoneEmergencia").value;

            //var campoTelefone1 = document.getElementById("Telefone1").value;
            //verifica se tem a classe disabled

            var tela = $(this).hasClass('disabled');
            if (tela) {
                if (id == "link1") {
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "") {
                        //if (!campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "")  //

                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link2") {
                    //if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link3") {
                    //if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "")
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link4") {
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        //if (!campoContatoEmergencia == "" && !campoTelefoneEmergencia == "")
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link5") {
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link6") {
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link7") {
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link8") {
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else {

                    $("#btnSalvar").submit()
                    //$(this).addClass('disabled');
                    return false;
                }

            }
            //se tiver não faz nada
            else {
                ////adicionamos nele
                $(this).addClass('disabled');
                $("#btnSalvar").submit()
                //$(this).addClass('disabled');
                return false;
            }
        });
    </script>
    @*<script>
            $(document).ready(function () {
                $("#telefone").inputmask("mask", { "mask": "(99) 9999-99999" });
                $("#cpf").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
                $("#cep").inputmask("mask", { "mask": "99999-999" });
                $("#nascimento").inputmask("mask", { "mask": "99/99/9999" });
                $("#preco").inputmask("mask", { "mask": "999.999,99" }, { reverse: true });
                $("#valor").inputmask("mask", { "mask": "#.##9,99" }, { reverse: true });
                $("#ip").inputmask("mask", { "mask": "999.999.999.999" });
            });
        </script>*@
}


