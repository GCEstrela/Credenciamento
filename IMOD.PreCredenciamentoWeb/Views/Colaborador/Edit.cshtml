@model IMOD.PreCredenciamentoWeb.Models.ColaboradorViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Colaborador</h3>
@using (Html.BeginForm("Edit", "Colaborador", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="table-wrapper">
        <div class="table-title">
            <div class="row">
                <div class="col-sm-8">
                    <h2>Cadastro de <b>Colaboradores</b></h2>
                </div>
                <div class="col-sm-4">
                    <button type="submit" class="btn btn-success" id="btnSalvar"><i class="fa fa-save"></i> <span>Salvar Colaborador</span></button>
                    <a href="~/Colaborador" class="submit btn btn-danger"><i class="fa fa-fw fa-sign-in"></i> <span>Cancelar</span></a>
                </div>
            </div>
        </div>
        <fieldset class="form-horizontal">
            @Html.Hidden("ColaboradorId", @Model.ColaboradorId)
            @Html.Hidden("ContratoEmpresaID", @Model.ContratoEmpresaID)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })



            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item active">
                    <a class="nav-link" id="link1" data-toggle="tab" href="#home" role="tab" aria-controls="home"
                       aria-selected="true">Identificação</a>
                </li>
                <li class="nav-item">
                    <a class="disabled" id="link2" data-toggle="tab" href="#profile" role="tab" aria-controls="profile"
                       aria-selected="false">Endereço</a>
                </li>
                <li class="nav-item">
                    <a class="disabled" id="link3" data-toggle="tab" href="#contact" role="tab" aria-controls="contact"
                       aria-selected="false">Contatos</a>
                </li>
                <li class="nav-item">
                    <a class="disabled" id="link4" data-toggle="tab" href="#registro" role="tab" aria-controls="registro"
                       aria-selected="false">Registro</a>
                </li>
                <li class="nav-item">
                    <a class="disabled" id="link5" data-toggle="tab" href="#cnh" role="tab" aria-controls="cnh"
                       aria-selected="false">CNH</a>
                </li>
                <li class="nav-item">
                    <a class="disabled" id="link6" data-toggle="tab" href="#vinculo" role="tab" aria-controls="vinculo"
                       aria-selected="false">Vínculo</a>
                </li>
                <li class="nav-item">
                    <a class="disabled" id="link7" data-toggle="tab" href="#curso" role="tab" aria-controls="curso"
                       aria-selected="false">Curso</a>
                </li>
            </ul>

            <div class="tab-content" id="myTabContent">
                <div class=" tab-pane active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control disabled", @id = "cpf", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Estrangeiro, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Estrangeiro)
                                @Html.ValidationMessageFor(model => model.Estrangeiro, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control text-uppercase", @id = "Nome" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Apelido, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Apelido, new { htmlAttributes = new { @class = "form-control text-uppercase", @id = "Apelido" } })
                            @Html.ValidationMessageFor(model => model.Apelido, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NomePai, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.NomePai, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.NomePai, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NomeMae, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.NomeMae, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.NomeMae, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control", id = "Cep" } })
                            @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Endereco" } })
                            @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Numero" } })
                            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "ddlBairro" } })
                            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div div class="form-group">
                        @Html.LabelFor(model => model.EstadoId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.EstadoId, ((IEnumerable<IMOD.Domain.Entities.Estados>)ViewBag.Estados).Select(option => new SelectListItem
                       {
                           Text = option.Nome,
                           Value = option.EstadoId.ToString(),
                           Selected = (Model != null) && (option.EstadoId == Model.EstadoId)
                       }), "Selecione", new { @class = "form-control text-uppercase", id = "ddlEstado" })
                            @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.MunicipioId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.MunicipioId, ((IEnumerable<IMOD.Domain.Entities.Municipio>)ViewBag.Municipio).Select(option => new SelectListItem
                       {
                           Text = option.Nome,
                           Value = option.MunicipioId.ToString(),
                           Selected = (Model != null) && (option.MunicipioId == Model.MunicipioId)
                       }), "Selecione", new { @class = "form-control text-uppercase", id = "ddlMunicipio" })                         
                            @Html.ValidationMessageFor(model => model.MunicipioId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">
                    <br />
                    <fieldset>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TelefoneFixo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.TelefoneFixo, new { htmlAttributes = new { @class = "form-control", @id = "telefone" } })
                                @Html.ValidationMessageFor(model => model.TelefoneFixo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TelefoneCelular, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.TelefoneCelular, new { htmlAttributes = new { @class = "form-control", @id = "celular" } })
                                @Html.ValidationMessageFor(model => model.TelefoneCelular, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ContatoEmergencia, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.ContatoEmergencia, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "ContatoEmergencia" } })
                                @Html.ValidationMessageFor(model => model.ContatoEmergencia, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TelefoneEmergencia, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.TelefoneEmergencia, new { htmlAttributes = new { @class = "form-control", id = "TelefoneEmergencia" } })
                                @Html.ValidationMessageFor(model => model.TelefoneEmergencia, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="tab-pane fade" id="registro" role="tabpanel" aria-labelledby="registro-tab">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Rg, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Rg, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.RgEmissao, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.RgEmissao, new { htmlAttributes = new { @class = "form-control text-uppercase datepicker" } })
                            @Html.ValidationMessageFor(model => model.RgEmissao, "", new { @class = "text-danger" })
                        </div>                    
                        @Html.LabelFor(model => model.RgOrgLocal, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1">
                            @Html.DropDownListFor(model => model.CnhCategoria, ((IEnumerable<SelectListItem>)ViewBag.OrgaoEmissorRG).Select(option => new SelectListItem
                       {
                           Text = option.Text,
                           Value = option.Text,
                           Selected = (Model != null) && (option.Text == Model.RgOrgLocal)
                       }), "Selecione", new { @class = "form-control text-uppercase" })

                            @Html.ValidationMessageFor(model => model.RgOrgLocal, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.RgOrgUf, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-1">
                            @Html.DropDownListFor(model => model.RgOrgUf, ((IEnumerable<IMOD.Domain.Entities.Estados>)ViewBag.UfRg).Select(option => new SelectListItem
                       {
                           Text = option.Uf,
                           Value = option.Uf,
                           Selected = (Model != null) && (option.Uf == Model.RgOrgUf)
                       }), "Selecione", new { @class = "form-control text-uppercase" })
                            @Html.ValidationMessageFor(model => model.RgOrgUf, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Rne, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Rne, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Rne, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Passaporte, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Passaporte, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Passaporte, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.PassaporteValidade, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.PassaporteValidade, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.PassaporteValidade, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Nacionalidade, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Nacionalidade, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Nacionalidade, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EstadoCivil, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.EstadoCivil, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="cnh" role="tabpanel" aria-labelledby="cnh-tab">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Motorista, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Motorista)
                                @Html.ValidationMessageFor(model => model.Motorista, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CnhCategoria, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">

                            @Html.DropDownListFor(model => model.CnhCategoria, ((IEnumerable<SelectListItem>)ViewBag.CategoriaCnh).Select(option => new SelectListItem
                       {
                           Text = option.Text,
                           Value = option.Value,
                           Selected = (Model != null) && (option.Value == Model.CnhCategoria)
                       }), "Selecione", new { @class = "form-control text-uppercase" })

                            @Html.ValidationMessageFor(model => model.CnhCategoria, "", new { @class = "text-danger" })
                        </div>
                  
                        @Html.LabelFor(model => model.Cnh, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Cnh, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                            @Html.ValidationMessageFor(model => model.Cnh, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CnhValidade, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.CnhValidade, new { htmlAttributes = new { @class = "form-control text-uppercase " } })
                            @Html.ValidationMessageFor(model => model.CnhValidade, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Cnhuf, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.Cnhuf, ((IEnumerable<IMOD.Domain.Entities.Estados>)ViewBag.UfRg).Select(option => new SelectListItem
                       {
                           Text = option.Uf,
                           Value = option.Uf,
                           Selected = (Model != null) && (option.Uf == Model.Cnhuf)
                       }), "Selecione", new { @class = "form-control text-uppercase" })
                            @Html.ValidationMessageFor(model => model.Cnhuf, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="vinculo" role="tabpanel" aria-labelledby="vinculo-tab">
                    <br />
                    <div div class="form-group">
                        <div class="col-lg-12">
                            @Html.Label("Manuseia bagagem?", htmlAttributes: new { @class = "control-label col-lg-2" })
                            <div class="col-lg-1">
                                @Html.CheckBox("Manudeia Bagagem", htmlAttributes: new { @id = "chkBagagem" })
                            </div>
                            @Html.Label("Vigência", htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-lg-2">
                                @Html.TextBox("txtVigencia", null, htmlAttributes: new { @id = "txtVigencia", @class = "datepicker form-control" })
                            </div>
                            @Html.Label("Cargo", htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-lg-4">
                                @Html.TextBox("txtCargo", null, htmlAttributes: new { @id = "txtCargo", @class = "form-control" })
                            </div>

                        </div>
                    </div>
                    <div div class="form-group">
                        <div class="col-lg-12">
                            @Html.LabelFor(model => model.ContratoEmpresaID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-lg-3">
                                @Html.DropDownListFor(model => model.ContratoEmpresaID, ((IEnumerable<IMOD.Domain.Entities.EmpresaContrato>)ViewBag.Contratos).Select(option => new SelectListItem
                           {
                               Text = option.Descricao,
                               Value = option.EmpresaContratoId.ToString(),
                               Selected = (Model != null) && (option.EmpresaContratoId.ToString() == Model.ContratoEmpresaID)
                           }), "Selecione", new { @class = "form-control text-uppercase", @id = "ddlContrato" })
                                @Html.ValidationMessageFor(model => model.ContratoEmpresaID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-7">
                                @*//href="@Url.Action("AdicionarContrato")"*@
                                <a title="Vincular Contrato" id="btContrato" href="#">
                                    <i class="material-icons">&#xE147;</i>
                                </a>
                            </div>
                        </div>
                    </div>
                    <br />
                    <fieldset>
                        <legend> Contratos Selecionados</legend>
                        <div class="row">
                            <div class="col-lg-2">Matrícula </div>
                            <div class="col-lg-4">Descricao</div>
                            <div class="col-lg-2">Manuseia Bagagem?</div>
                            <div class="col-lg-4"></div>
                        </div>
                        <div class="row" id="divContrato">
                            @foreach (var item in ((IEnumerable<IMOD.PreCredenciamentoWeb.Models.ColaboradorEmpresaViewModel>)ViewBag.ContratosSelecionados))
                            {

                                <div class="col-lg-2">@item.Matricula</div>
                                <div class="col-lg-4">@item.Descricao</div>
                                <div class="col-lg-2">@item.ManuseioBagagem</div>
                                <div class="col-lg-4">
                                    <a title="Vincular Contrato" id=@item.EmpresaContratoId href="#" class="btnRemover" onclick="RemoverContrato(this)">
                                        <i class="material-icons danger">&#xE15C;</i>
                                    </a>
                                </div>

                            }
                        </div>
                    </fieldset>
                </div>
                <div class="tab-pane fade" id="curso" role="tabpanel" aria-labelledby="curso-tab">
                    <br />
                    <div div class="form-group">
                        <div class="col-lg-3">
                            @Html.DropDownListFor(model => model.ContratoEmpresaID, ((IEnumerable<IMOD.Domain.Entities.Curso>)ViewBag.Cursos).Select(option => new SelectListItem
                       {
                           Text = option.Descricao,
                           Value = option.CursoId.ToString()
                       }), "Selecione", new { @class = "form-control text-uppercase", @id = "ddlCurso" })
                        </div>
                        <div class="col-lg-4">
                            @*//href="@Url.Action("AdicionarContrato")"*@
                            <a title="Incluir Curso" id="btCurso" href="#">
                                <i class="material-icons">&#xE147;</i>
                            </a>
                        </div>
                    </div>
                    <br />
                    <fieldset>
                        <legend> Cursos Selecionados</legend>
                        <div class="row" id="divCurso">
                            @foreach (var item in ((IEnumerable<IMOD.Domain.Entities.Curso>)ViewBag.CursosSelecionados))
                            {

                                <div class="col-lg-1">@item.CursoId</div>
                                <div class="col-lg-7">@item.Descricao</div>
                                <div class="col-lg-4">
                                    <a title="Remover Curso" id=@item.CursoId href="#" class="btnRemoverCurso" onclick="RemoverCurso(this)">
                                        <i class="material-icons danger">&#xE15C;</i>
                                    </a>
                                </div>

                            }
                        </div>
                    </fieldset>
                </div>
            </div>
        </fieldset>
    </div>
}


<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            //evento do botão incluir contrato
            $("#btContrato").click(function () {
                var id = $("#ddlContrato").val();
                var bagagem = $("#chkBagagem").val();
                var validade = $("#txtVigencia").val();
                var cargo = $("#txtCargo").val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AdicionarContrato")',
                    data: {
                        id: id,
                        bagagem: bagagem,
                        validade: validade,
                        cargo: cargo
                    },
                    success: function (result) {
                        var html = '';
                        $.each(result, function (key, item) {
                            html += '<div class="col-lg-2">' + item.Matricula + '</div>';
                            html += '<div class="col-lg-4">' + item.Descricao + '</div>';
                            html += '<div class="col-lg-2">' + item.ManuseioBagagem + '</div>';
                            html += '<div class="col-lg-4"><a class="btnRemover" title="Remover Contrato" id=' + item.EmpresaContratoId + ' onclick="RemoverContrato(this)"><i class="material-icons danger">&#xE15C;</i></a></div>';
                        });
                        $('#divContrato').html('');
                        $('#divContrato').append(html);
                        $("#ddlContrato").val('');
                        $("#chkBagagem").val(false);
                        $("#txtVigencia").val('');
                        $("#txtCargo").val('');
                        console.log(result);

                    },
                    error: function (result) {
                        Alert(result);
                    }
                });
            });

             //evento do botão incluir curso
             $("#btCurso").click(function () {
                var id = $("#ddlCurso").val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AdicionarCurso")',
                    data: { id: id },
                    success: function (result) {
                        var html = '';
                        $.each(result, function (key, item) {
                            html += '<div class="col-lg-1">' + item.CursoId + '</div>';
                            html += '<div class="col-lg-7">' + item.Descricao + '</div>';
                            html += '<div class="col-lg-4"><a class="btnRemover" title="Remover Contrato" id=' + item.CursoId + ' onclick="RemoverCurso(this)"><i class="material-icons danger">&#xE15C;</i></a></div>';
                        });
                        $('#divCurso').html('');
                        $('#divCurso').append(html);
                        $("#ddlCurso").val('');
                        console.log(result);

                    },
                    error: function (result) {
                        Alert(result);
                    }
                });
            });


            //evento do botão incluir curso
            $("#ddlEstado").change(function () {
                BuscarMunicipio();
            });

        });
    </script>
    <script>
         function RemoverContrato(it)
            {
             var id = it.id;
               $.ajax({
                   type: "POST",
                   url: '@Url.Action("RemoverContrato")',
                   data: { id: id },
                   success: function (result) {
                       var html = '';
                       $.each(result, function (key, item) {
                           html += '<div class="col-lg-2">' + item.Matricula + '</div>';
                           html += '<div class="col-lg-4">' + item.Descricao + '</div>';
                           html += '<div class="col-lg-2">' + item.ManuseioBagagem + '</div>';
                           html += '<div class="col-lg-4"><a class="btnRemoverContrato" title="Remover Contrato" id=' + item.EmpresaContratoId + ' onclick="RemoverContrato(this)"><i class="material-icons danger">&#xE15C;</i></a></div>';

                       });
                       $('#divContrato').html('');
                       $('#divContrato').append(html);
                       console.log(result);
                   },
                   error: function (result) {

                   }
                 });
        };

         function RemoverCurso(it)
            {
             var id = it.id;
               $.ajax({
                   type: "POST",
                   url: '@Url.Action("RemoverCurso")',
                   data: { id: id },
                   success: function (result) {
                       var html = '';
                       $.each(result, function (key, item) {
                           html += '<div class="col-lg-1">' + item.CursoId + '</div>';
                           html += '<div class="col-lg-7">' + item.Descricao + '</div>';
                           html += '<div class="col-lg-4"><a class="btnRemoverCurso" title="Remover Curso" id=' + item.CursoId + ' onclick="RemoverCurso(this)"><i class="material-icons danger">&#xE15C;</i></a></div>';

                       });
                       $('#divCurso').html('');
                       $('#divCurso').append(html);
                       console.log(result);
                   },
                   error: function (result) {

                   }
                 });
        };
    </script>
    <script>
        $('[id^=link]').click(function () {

            //var isValid = ${ ViewData.ModelState.IsValid };
            //var isValid = ${ViewData.ModelState.IsValid};

            var id = $(this).attr('id');

            var campoCpf = document.getElementById("Cpf").value;
            var campoNome = document.getElementById("Nome").value;
            var campoApelido = document.getElementById("Apelido").value;

            var campoCep = document.getElementById("Cep").value;
            var campoEndereco = document.getElementById("Endereco").value;
            var campoBairro = document.getElementById("Bairro").value;
            var campoNumero = document.getElementById("Numero").value;
            var campoEstadoId = document.getElementById("EstadoId").value;
            var campoMunicipioId = document.getElementById("MunicipioId").value;

            var campoContatoEmergencia = document.getElementById("ContatoEmergencia").value;
            var campoTelefoneEmergencia = document.getElementById("TelefoneEmergencia").value;
            //var campoTelefone1 = document.getElementById("Telefone1").value;
            //verifica se tem a classe disabled
            var teste = $(this).hasClass('disabled');
            if (teste) {
                if (id == "link1") {
                    if (!campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "")  //
                    {
                        $("#btnSalvar").submit()
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link2") {
                    //$(tab1).addClass('disabled');
                    //$(tab3).addClass('disabled');
                    //$(tab4).addClass('disabled');
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link3") {
                    //$(tab1).addClass('disabled');
                    //$(tab2).addClass('disabled');
                    //$(tab4).addClass('disabled');
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link4") {
                    //$(tab1).addClass('disabled');
                    //$(tab2).addClass('disabled');
                    //$(tab4).addClass('disabled');
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link5") {
                    //$(tab1).addClass('disabled');
                    //$(tab2).addClass('disabled');
                    //$(tab4).addClass('disabled');
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link6") {
                    //$(tab1).addClass('disabled');
                    //$(tab2).addClass('disabled');
                    //$(tab4).addClass('disabled');
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else if (id == "link7") {
                    //$(tab1).addClass('disabled');
                    //$(tab2).addClass('disabled');
                    //$(tab4).addClass('disabled');
                    if (!campoNome == "" && !campoApelido == "" && !campoCpf == "" && !campoCep == "" && !campoEndereco == "" && !campoBairro == "" && !campoNumero == "" && !campoEstadoId == "" && !campoMunicipioId == "" && !campoContatoEmergencia == "" && !campoTelefoneEmergencia == "") {
                        $(this).removeClass('disabled');
                        return true;
                    }
                    else {
                        $("#btnSalvar").submit()
                        $(this).addClass('disabled');
                        return false;
                    }
                }
                else {

                    $("#btnSalvar").submit()
                    //$(this).addClass('disabled');
                    return false;
                }

            }
            //se tiver não faz nada
            else {
                ////adicionamos nele
                $(this).addClass('disabled');
                $("#btnSalvar").submit()
                //$(this).addClass('disabled');
                return false;
            }
        });
    </script>
    <script>
        function BuscarMunicipio() {
            var id = $("#ddlEstado").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("BuscarMunicipios")',
                data: { id: id },
                success: function (result) {
                    var html = '<option value="">SELECIONE</option>';
                    $.each(result, function (key, item) {
                        html += '<option value=' + this.MunicipioId + '>' + this.Nome + '</option>';
                    });

                    $('#ddlMunicipio').html(html);
                    console.log(result);

                },
                error: function (result) {
                    Alert(result);
                }
            });
        };
         
    </script>
   

}
