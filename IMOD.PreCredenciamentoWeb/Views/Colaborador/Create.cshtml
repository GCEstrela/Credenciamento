@model IMOD.PreCredenciamentoWeb.Models.ColaboradorViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Colaborador</h3>


@using (Html.BeginForm("Create", "Colaborador", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="table-wrapper">
        <fieldset class="form-horizontal">

            <div class="row" style="height:620px;">
                <section>
                    <div class="wizard">
                        <div class="wizard-inner">
                            <div class="connecting-line"></div>
                            <ul class="nav nav-tabs" role="tablist">

                                <li role="presentation" class="active" style="padding-left: 10px">
                                    <a href="#home" data-toggle="tab" aria-controls="home" role="tab" title="Identificação">
                                        <span class="round-tab">
                                            <i class="glyphicon glyphicon-user"></i>
                                        </span>
                                    </a>
                                </li>

                                <li role="presentation" class="disabled" style="padding-left: 10px">
                                    <a href="#profile" data-toggle="tab" aria-controls="profile" role="tab" title="Endereço">
                                        <span class="round-tab">
                                            <i class="glyphicon glyphicon-home"></i>
                                        </span>
                                    </a>
                                </li>
                                <li role="presentation" class="disabled" style="padding-left: 10px">
                                    <a href="#contact" data-toggle="tab" aria-controls="contact" role="tab" title="Contatos">
                                        <span class="round-tab">
                                            <i class="glyphicon glyphicon-phone"></i>
                                        </span>
                                    </a>
                                </li>
                                <li role="presentation" class="disabled" style="padding-left: 10px">
                                    <a href="#registro" data-toggle="tab" aria-controls="registro" role="tab" title="Registro">
                                        <span class="round-tab">
                                            <i class="glyphicon glyphicon-pencil"></i>
                                        </span>
                                    </a>
                                </li>
                                <li role="presentation" class="disabled" style="padding-left: 10px">
                                    <a href="#cnh" data-toggle="tab" aria-controls="cnh" role="tab" title="CNH">
                                        <span class="round-tab">
                                            <i class="fa fa-id-card-o"></i>
                                        </span>
                                    </a>
                                </li>
                                <li role="presentation" class="disabled" style="padding-left: 10px">
                                    <a href="#vinculo" data-toggle="tab" aria-controls="vinculo" role="tab" title="Vínculo">
                                        <span class="round-tab">
                                            <i class="glyphicon glyphicon-link"></i>
                                        </span>
                                    </a>
                                </li>
                                <li role="presentation" class="disabled" style="padding-left: 10px">
                                    <a href="#curso" data-toggle="tab" aria-controls="curso" role="tab" title="Curso">
                                        <span class="round-tab">
                                            <i class="glyphicon glyphicon-blackboard"></i>
                                        </span>
                                    </a>
                                </li>
                                <li role="presentation" class="disabled" style="padding-left: 10px">
                                    <a href="#aceite" data-toggle="tab" aria-controls="aceite" role="tab" title="Aceite">
                                        <span class="round-tab">
                                            <i class="glyphicon glyphicon-thumbs-up"></i>
                                        </span>
                                    </a>
                                </li>
                                <li role="presentation" class="disabled" style="padding-left: 10px">
                                    <a href="#complete" data-toggle="tab" aria-controls="complete" role="tab" title="Complete">
                                        <span class="round-tab">
                                            <i class="glyphicon glyphicon-ok"></i>
                                        </span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <form role="form">
                            <div class="tab-content">
                                <div class="tab-pane active" role="tabpanel" id="home">
                                    <div class="col-lg-8">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control disabled", @id = "Cpf" } })
                                                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                                            </div>
                                            @Html.LabelFor(model => model.Estrangeiro, htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-2">
                                                <div class="checkbox">
                                                    @Html.EditorFor(model => model.Estrangeiro, new { htmlAttributes = new { @class = "control-input" } })
                                                    @Html.ValidationMessageFor(model => model.Estrangeiro, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control text-uppercase", @id = "Nome" } })
                                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Apelido, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.Apelido, new { htmlAttributes = new { @class = "form-control text-uppercase", @id = "Apelido" } })
                                                @Html.ValidationMessageFor(model => model.Apelido, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.NomePai, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.NomePai, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                                @Html.ValidationMessageFor(model => model.NomePai, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.NomeMae, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.NomeMae, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                                @Html.ValidationMessageFor(model => model.NomeMae, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FileUpload, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10 ">
                                                <input type="file" name="FileUpload" id="FileUpload" accept=".pdf" />
                                                @Html.ValidationMessageFor(model => model.FileUpload, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FotoColaborador, htmlAttributes: new { @class = "control-label col-md-5" })

                                        </div>
                                        <div class="col-md-5" style="height:152px;  width:123px">
                                            <img class="resize" id="FotoUpload" src="#" alt="Imagem" style="padding-bottom: 15px" />
                                            @*<button id="btFoto">Selecione uma foto</button>*@
                                            <input type="file" name="FotoColaborador" accept="image/*" id="FotoColaborador" />
                                        </div>
                                    </div>
                                    <br />
                                    <div class="col-lg-12">
                                        <ul class="list-inline pull-right" style="padding-top: 55px">
                                            <li><a href="~/Colaborador/Index" class="submit btn btn-danger btn-icon"><span><strong>Cancelar</strong></span></a></li>
                                            <li><button type="button" class="btn btn-primary next-step btn-icon"><span><strong>Avançar</strong></span> <i class="fa fa-arrow-right"></i> </button> </li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="tab-pane" role="tabpanel" id="profile">
                                    <fieldset>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2">
                                                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control", id = "Cep" } })
                                                @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Endereco" } })
                                                @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2">
                                                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Numero" } })
                                                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-5">
                                                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "ddlBairro" } })
                                                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div div class="form-group">
                                            @Html.LabelFor(model => model.EstadoId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.DropDownListFor(model => model.EstadoId, ((IEnumerable<IMOD.Domain.Entities.Estados>)ViewBag.Estados).Select(option => new SelectListItem
                                           {
                                               Text = option.Nome,
                                               Value = option.EstadoId.ToString(),
                                               Selected = (Model != null) && (option.EstadoId == Model.EstadoId)
                                           }), "Selecione", new { @class = "form-control text-uppercase", id = "ddlEstado" })
                                                @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
                                            </div>
                                            @Html.LabelFor(model => model.MunicipioId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.DropDownListFor(model => model.MunicipioId, ((IEnumerable<IMOD.Domain.Entities.Municipio>)ViewBag.Municipio).Select(option => new SelectListItem
                                           {
                                               Text = option.Nome,
                                               Value = option.MunicipioId.ToString(),
                                               Selected = (Model != null) && (option.MunicipioId == Model.MunicipioId)
                                           }), "Selecione", new { @class = "form-control text-uppercase", id = "ddlMunicipio" })
                                                @Html.ValidationMessageFor(model => model.MunicipioId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </fieldset>
                                    <div class="col-lg-12">
                                        <ul class="list-inline pull-right" style="padding-top: 100px">
                                            <li><a href="~/Colaborador/Index" class="submit btn btn-danger btn-icon"><span><strong>Cancelar</strong></span></a></li>
                                            <li><button type="button" class="btn btn-default prev-step btn-icon"><i class="fa fa-arrow-left"></i> <span><strong>Voltar</strong></span></button></li>
                                            <li><button type="button" class="btn btn-primary next-step btn-icon"><span><strong>Avançar</strong></span> <i class="fa fa-arrow-right"></i> </button> </li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="tab-pane" role="tabpanel" id="contact">
                                    <fieldset>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TelefoneFixo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.TelefoneFixo, new { htmlAttributes = new { @class = "form-control", @id = "telefone" } })
                                                @Html.ValidationMessageFor(model => model.TelefoneFixo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TelefoneCelular, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.TelefoneCelular, new { htmlAttributes = new { @class = "form-control", @id = "celular" } })
                                                @Html.ValidationMessageFor(model => model.TelefoneCelular, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ContatoEmergencia, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.ContatoEmergencia, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "ContatoEmergencia" } })
                                                @Html.ValidationMessageFor(model => model.ContatoEmergencia, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TelefoneEmergencia, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.TelefoneEmergencia, new { htmlAttributes = new { @class = "form-control", id = "TelefoneEmergencia" } })
                                                @Html.ValidationMessageFor(model => model.TelefoneEmergencia, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </fieldset>
                                    <div class="col-lg-12">
                                        <ul class="list-inline pull-right" style="padding-top: 100px">
                                            <li><a href="~/Colaborador/Index" class="submit btn btn-danger btn-icon"><span><strong>Cancelar</strong></span></a></li>
                                            <li><button type="button" class="btn btn-default prev-step btn-icon"><i class="fa fa-arrow-left"></i> <span><strong>Voltar</strong></span></button></li>
                                            <li><button type="button" class="btn btn-primary next-step btn-icon"><span><strong>Avançar</strong></span> <i class="fa fa-arrow-right"></i> </button> </li>

                                        </ul>
                                    </div>
                                </div>
                                <div class="tab-pane" role="tabpanel" id="registro">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Rg, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                            @Html.ValidationMessageFor(model => model.Rg, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.RgEmissao, htmlAttributes: new { @class = "control-label col-md-1" })
                                        <div class="col-md-2">
                                            <div id="datepicker">
                                                <div class="input-group date">
                                                    @Html.EditorFor(model => model.RgEmissao, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                    @Html.ValidationMessageFor(model => model.RgEmissao, "", new { @class = "text-danger" })
                                                </div>
                                            </div>


                                        </div>

                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.RgOrgLocal, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.RgOrgLocal, ((IEnumerable<SelectListItem>)ViewBag.OrgaoEmissorRG).Select(option => new SelectListItem
                                       {
                                           Text = option.Text,
                                           Value = option.Text,
                                           Selected = (Model != null) && (option.Text == Model.RgOrgLocal)
                                       }), "Selecione", new { @class = "form-control text-uppercase" })

                                            @Html.ValidationMessageFor(model => model.RgOrgLocal, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.RgOrgUf, htmlAttributes: new { @class = "control-label col-md-1" })
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.RgOrgUf, ((IEnumerable<IMOD.Domain.Entities.Estados>)ViewBag.UfRg).Select(option => new SelectListItem
                                       {
                                           Text = option.Uf,
                                           Value = option.Uf,
                                           Selected = (Model != null) && (option.Uf == Model.RgOrgUf)
                                       }), "Selecione", new { @class = "form-control text-uppercase" })
                                            @Html.ValidationMessageFor(model => model.RgOrgUf, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Rne, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-5">
                                            @Html.EditorFor(model => model.Rne, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                            @Html.ValidationMessageFor(model => model.Rne, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Passaporte, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.Passaporte, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                            @Html.ValidationMessageFor(model => model.Passaporte, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.PassaporteValidade, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            <div id="datepicker">
                                                <div class="input-group date">
                                                    @Html.EditorFor(model => model.PassaporteValidade, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                    @Html.ValidationMessageFor(model => model.PassaporteValidade, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            <div id="datepicker">
                                                <div class="input-group date">
                                                    @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                    @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        @Html.LabelFor(model => model.Nacionalidade, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.Nacionalidade, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                            @Html.ValidationMessageFor(model => model.Nacionalidade, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EstadoCivil, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.EstadoCivil, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                            @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-lg-12">
                                        <ul class="list-inline pull-right" style="padding-top: 52px">
                                            <li><a href="~/Colaborador/Index" class="submit btn btn-danger btn-icon"><span><strong>Cancelar</strong></span></a></li>
                                            <li><button type="button" class="btn btn-default prev-step btn-icon"><i class="fa fa-arrow-left"></i> <span><strong>Voltar</strong></span></button></li>
                                            <li><button type="button" class="btn btn-primary next-step btn-icon"><span><strong>Avançar</strong></span> <i class="fa fa-arrow-right"></i> </button> </li>

                                        </ul>
                                    </div>
                                </div>
                                <div class="tab-pane" role="tabpanel" id="cnh">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CnhCategoria, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">

                                            @Html.DropDownListFor(model => model.CnhCategoria, ((IEnumerable<SelectListItem>)ViewBag.CategoriaCnh).Select(option => new SelectListItem
                                       {
                                           Text = option.Text,
                                           Value = option.Value,
                                           Selected = (Model != null) && (option.Value == Model.CnhCategoria)
                                       }), "Selecione", new { @class = "form-control text-uppercase" })

                                            @Html.ValidationMessageFor(model => model.CnhCategoria, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.LabelFor(model => model.Cnh, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.Cnh, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                            @Html.ValidationMessageFor(model => model.Cnh, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CnhValidade, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            <div id="datepicker">
                                                <div class="input-group date">
                                                    @Html.EditorFor(model => model.CnhValidade, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                    @Html.ValidationMessageFor(model => model.CnhValidade, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        @Html.LabelFor(model => model.Cnhuf, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.Cnhuf, ((IEnumerable<IMOD.Domain.Entities.Estados>)ViewBag.UfRg).Select(option => new SelectListItem
                                       {
                                           Text = option.Uf,
                                           Value = option.Uf,
                                           Selected = (Model != null) && (option.Uf == Model.Cnhuf)
                                       }), "Selecione", new { @class = "form-control text-uppercase" })
                                            @Html.ValidationMessageFor(model => model.Cnhuf, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-lg-12">
                                        <ul class="list-inline pull-right" style="padding-top: 199px">
                                            <li><a href="~/Colaborador/Index" class="submit btn btn-danger btn-icon"><span><strong>Cancelar</strong></span></a></li>
                                            <li><button type="button" class="btn btn-default prev-step btn-icon"><i class="fa fa-arrow-left"></i> <span><strong>Voltar</strong></span></button></li>
                                            <li><button type="button" class="btn btn-primary next-step btn-icon"><span><strong>Avançar</strong></span> <i class="fa fa-arrow-right"></i> </button> </li>

                                        </ul>
                                    </div>
                                </div>
                                <div class="tab-pane" role="tabpanel" id="vinculo">
                                    <div class="form-group  col-lg-12">
                                        <div class="col-lg-3" style="vertical-align:top; text-align: center;">
                                            <div>
                                                <img src="~/Images/operadorBagagem.png" height="20" />&nbsp;&nbsp;
                                                @Html.Label("Manuseia bagagem?", htmlAttributes: new { @class = "control-label " })
                                                @Html.CheckBox("Manuseia Bagagem", htmlAttributes: new { @id = "chkBagagem" })
                                            </div>
                                        </div>
                                        <div class="col-lg-3" style="vertical-align:top; text-align: center;">
                                            <div>
                                                <img src="~/Images/operadorEmbarque.png" height="25" />&nbsp;&nbsp;
                                                @Html.Label("Operador Ponte Embarque?", htmlAttributes: new { @class = "control-label" })
                                                @Html.CheckBox(" Operador Ponte Embarque ", htmlAttributes: new { @id = "chkPonteEmbarque" })
                                            </div>
                                        </div>
                                        <div class="col-lg-3" style="vertical-align:top; text-align: center;">
                                            <div>
                                                <img src="~/Images/ccam.png" height="25" />&nbsp;&nbsp;
                                                @Html.Label("Operador CCAM?", htmlAttributes: new { @class = "control-label" })
                                                @Html.CheckBox(" Operador CCAM ", htmlAttributes: new { @id = "chkCcam" })
                                            </div>
                                        </div>
                                        <div class="col-lg-3" style="vertical-align:top; text-align: center;">

                                            <div>
                                                <img src="~/Images/motorista.png" height="25" />&nbsp;&nbsp;
                                                @Html.Label("Motorista?", htmlAttributes: new { @class = "control-label" })
                                                @Html.CheckBoxFor(model => model.Motorista, htmlAttributes: new { @id = "chkMotorista" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div>
                                            @Html.Label("Cargo", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-lg-4">
                                                @Html.TextBox("txtCargo", null, htmlAttributes: new { @id = "txtCargo", @class = "form-control text-uppercase" })
                                            </div>
                                            @Html.LabelFor(model => model.Vigencia, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2">
                                                <div id="datepicker">
                                                    <div class="input-group date">
                                                        @Html.EditorFor(model => model.Vigencia, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                        @Html.ValidationMessageFor(model => model.Vigencia, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div div class="form-group">
                                        <div>
                                            @Html.LabelFor(model => model.ContratoEmpresaID, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-lg-3">
                                                @Html.DropDownListFor(model => model.ContratoEmpresaID, ((IEnumerable<IMOD.Domain.Entities.EmpresaContrato>)ViewBag.Contratos).Select(option => new SelectListItem
                                           {
                                               Text = option.Descricao,
                                               Value = option.EmpresaContratoId.ToString(),
                                               Selected = (Model != null) && (option.EmpresaContratoId.ToString() == Model.ContratoEmpresaID)
                                           }), "Selecione", new { @class = "form-control text-uppercase", @id = "ddlContrato" })
                                                @Html.ValidationMessageFor(model => model.ContratoEmpresaID, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-lg-7">
                                                @*//href="@Url.Action("AdicionarContrato")"*@
                                                <a title="Vincular Contrato" id="btContrato" href="#">
                                                    <i class="success btn-icon fa fa-plus-circle" style="color: #92c755; font-size: 25px; text-align:center"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <fieldset>
                                        <legend> Contratos Selecionados</legend>
                                        <div class="row">
                                            <div class="col-lg-2"><b>Cargo </b></div>
                                            <div class="col-lg-2"><b>Matrícula</b></div>
                                            <div class="col-lg-2"><b>Descrição</b></div>
                                            <div class="col-lg-2"><b>Manuseia Bagagem</b></div>
                                            <div class="col-lg-2"><b>Operador Ponte</b></div>
                                            <div class="col-lg-1"><b>CCAM</b></div>
                                            <div class="col-lg-1"></div>
                                        </div>
                                        <div class="row" id="divContrato">
                                            @foreach (var item in ((IEnumerable<IMOD.PreCredenciamentoWeb.Models.ColaboradorEmpresaViewModel>)ViewBag.ContratosSelecionados))
                                            {
                                                <div class="col-lg-2 text-uppercase">@item.Cargo</div>
                                                <div class="col-lg-2">@item.Matricula</div>
                                                <div class="col-lg-2 text-uppercase">@item.Descricao</div>
                                                <div class="col-lg-2">@(item.ManuseioBagagem ? "Sim" : "Não") </div>
                                                <div class="col-lg-2">@(item.OperadorPonteEmbarque ? "Sim" : "Não")</div>
                                                <div class="col-lg-1">@(item.FlagCcam ? "Sim" : "Não") </div>
                                                <div class="col-lg-1">
                                                    <a title="Remover Contrato" id=@item.EmpresaContratoId href="#" class="btnRemover" onclick="RemoverContrato(this)">
                                                        <i class="danger btn-icon fa fa-minus-circle" style="color: #f55145; font-size: 25px; text-align:center"></i>
                                                    </a>
                                                </div>
                                                <br />
                                            }
                                        </div>
                                    </fieldset>
                                    <div class="col-lg-12">
                                        <ul class="list-inline pull-right" style="padding-top: 97px">
                                            <li><a href="~/Colaborador/Index" class="submit btn btn-danger btn-icon"><span><strong>Cancelar</strong></span></a></li>
                                            <li><button type="button" class="btn btn-default prev-step btn-icon"><i class="fa fa-arrow-left"></i> <span><strong>Voltar</strong></span></button></li>
                                            <li><button type="button" class="btn btn-primary next-step btn-icon"><span><strong>Avançar</strong></span> <i class="fa fa-arrow-right"></i> </button> </li>

                                        </ul>
                                    </div>
                                </div>
                                <div class="tab-pane" role="tabpanel" id="curso">
                                    <div div class="form-group">
                                        <div class="col-lg-3">
                                            @Html.DropDownListFor(model => model.ContratoEmpresaID, ((IEnumerable<IMOD.Domain.Entities.Curso>)ViewBag.Cursos).Select(option => new SelectListItem
                                       {
                                           Text = option.Descricao,
                                           Value = option.CursoId.ToString()
                                       }), "Selecione", new { @class = "form-control text-uppercase", @id = "ddlCurso" })
                                        </div>
                                        <div class="col-lg-4">
                                            @*//href="@Url.Action("AdicionarContrato")"*@
                                            <a title="Incluir Curso" id="btCurso" href="#">
                                                <i class="success btn-icon fa fa-plus-circle" style="color: #92c755; font-size: 25px; text-align:center"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <br />
                                    <fieldset>
                                        <legend> Cursos Selecionados</legend>
                                        <div class="row" id="divCurso">
                                            @foreach (var item in ((IEnumerable<IMOD.Domain.Entities.Curso>)ViewBag.CursosSelecionados))
                                            {

                                                <div class="col-lg-1">@item.CursoId</div>
                                                <div class="col-lg-7">@item.Descricao</div>
                                                <div class="col-lg-4">
                                                    <a title="Remover Curso" id=@item.CursoId href="#" class="btnRemoverCurso" onclick="RemoverCurso(this)">
                                                        <i class="danger btn-icon fa fa-minus-circle" style="color: #f55145; font-size: 25px; text-align:center"></i>
                                                    </a>
                                                </div>

                                            }
                                        </div>
                                    </fieldset>
                                    <div class="col-lg-12">
                                        <ul class="list-inline pull-right" style="padding-top: 208px">
                                            <li><a href="~/Colaborador/Index" class="submit btn btn-danger btn-icon"><span><strong>Cancelar</strong></span></a></li>
                                            <li><button type="button" class="btn btn-default prev-step btn-icon"><i class="fa fa-arrow-left"></i> <span><strong>Voltar</strong></span></button></li>
                                            <li><button type="button" class="btn btn-primary next-step btn-icon"><span><strong>Avançar</strong></span> <i class="fa fa-arrow-right"></i> </button> </li>

                                        </ul>
                                    </div>
                                </div>
                                <div class="tab-pane" role="tabpanel" id="aceite">
                                    <fieldset>
                                        <div class="form-group" style="text-align:center">
                                            <div class="col-md-12" style="align-content:center">
                                                <textarea rows="7" style="overflow:auto;resize:none" draggable="false" cols="150" readonly>

           Entendo que para seguir com o preenchimento das informações pessoais solicitadas nas próximas etapas, obtive das respectivas pessoas, a devida autorização prévia, 
    mediante a assinatura do Termo de Consentimento anexo. Declaro, ainda, que as pessoas serão orientadas a entregar a via original do Termo de Consentimento para o 
    Aeroporto de Florianópolis. Entendo, reconheço e me comprometo a seguir com as autorizações prévias conforme acima indicado e que tal ato será praticado em atenção à 
    Lei Geral de Proteção de Dados Pessoais - Lei nº13.709/2018.

                                                </textarea>
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-12 " style="padding-left: 30px; padding-top: 15px;">
                                                    <a href="~/Documentos/Termo de Consentimento_Credenciamento.pdf" download="Modelo_Termo_Aceite">Clique aqui para baixar o termo de consentimento.</a>
                                                    @Html.ValidationMessageFor(model => model.Aceite, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="checkbox col-md-12" style="padding-left: 40px;">
                                                <div class="col-md-5">

                                                    <input type="checkbox" model="chkAceite" name="chkAceite" value="true"><b>Li e concordo com os termos de uso e política de privacidade</b><br />

                                                    @Html.ValidationMessageFor(model => model.chkAceite, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                    </fieldset>
                                    <div class="col-lg-12">
                                        <ul class="list-inline pull-right" style="padding-top: 111px">

                                            <li><a href="~/Colaborador/Index" class="submit btn btn-danger btn-icon"><span><strong>Cancelar</strong></span></a></li>
                                            <li><button type="button" class="btn btn-default prev-step btn-icon"><i class="fa fa-arrow-left"></i> <span><strong>Voltar</strong></span></button></li>
                                            <li><button type="submit" class="btn btn-success" id="btnSalvar"><i class="fa fa-save"></i> <span>Salvar e Enviar para Aprovação</span></button></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="tab-pane" role="tabpanel" id="complete">
                                    <h3>Complete</h3>
                                    <p>You have successfully completed all steps.</p>
                                </div>
                                <div class="clearfix"></div>

                            </div>

                        </form>

                    </div>

                </section>

            </div>
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        </fieldset>



    </div>
}





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            //evento do botão incluir contrato
            $("#Cep").focusout(function () {
                BuscarEndereco();
            });

            $("#btContrato").click(function () {
                var id = $("#ddlContrato").val();
                var bagagem = $('#chkBagagem').is(':checked');
                var ponteEmbarque = $('#chkPonteEmbarque').is(':checked');
                var ccam = $('#chkCcam').is(':checked');
                var validade = $("#txtVigencia").val();
                var cargo = $("#txtCargo").val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AdicionarContrato")',
                    data: {
                        id: id,
                        bagagem: bagagem,
                        operadorPonteEmbarque: ponteEmbarque,
                        flagCcam: ccam,
                        validade: validade,
                        cargo: cargo
                    },
                    success: function (result) {
                        var html = '';
                        $.each(result, function (key, item) {
                            html += '<div class="col-lg-2 text-uppercase">' + item.Cargo + '</div>';
                            html += '<div class="col-lg-2">' + item.Matricula + '</div>';
                            html += '<div class="col-lg-2 text-uppercase">' + item.Descricao + '</div>';
                            html += '<div class="col-lg-2">' + (item.ManuseioBagagem == true ? 'Sim' : 'Não') + '</div>';
                            html += '<div class="col-lg-2">' + (item.OperadorPonteEmbarque == true ? 'Sim' : 'Não') + '</div>';
                            html += '<div class="col-lg-1">' + (item.FlagCcam == true ? 'Sim' : 'Não')  + '</div>';
                            html += '<div class="col-lg-1"><a class="btnRemover" title="Remover Contrato" id=' + item.EmpresaContratoId + ' onclick="RemoverContrato(this)"><i class="danger btn-icon fa fa-minus-circle" style="color: #f55145; font-size: 25px; text-align:center"></i></a></div>';
                        });
                        $('#divContrato').html('');
                        $('#divContrato').append(html);
                        $("#ddlContrato").val('');
                        $("#chkBagagem").attr('checked', false);
                        $("#chkPonteEmbarque").attr('checked', false);
                        $("#chkCcam").attr('checked', false);
                        $("#txtVigencia").val('');
                        $("#txtCargo").val('');
                        console.log(result);

                    },
                    error: function (result) {
                        Alert(result);
                    }
                });
                });


                $('#Cpf').focusout(function () {
                     cpf = $('#Cpf').val();
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ConsultarCPF")',
                        data: {
                            cpf: cpf,
                        },
                        success: function (result) {
                            if (result != null) {
                                alert("Colaborador já cadastrado. Procure o credenciamento local para associá-lo ao contrato.");
                                $('#Cpf').val('');
                            }
                        },
                        error: function (result) {
                            Alert(result);
                        }

                    });
                });


            $('#datepicker .input-group.date').datepicker({
                format: 'dd/mm/yyyy',
                language: 'pt-BR',
                autoclose: true,
                orientation: "bottom"
            });



            });



             //evento do botão incluir curso
             $("#btCurso").click(function () {
                var id = $("#ddlCurso").val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AdicionarCurso")',
                    data: { id: id },
                    success: function (result) {
                        var html = '';
                        $.each(result, function (key, item) {
                            html += '<div class="col-lg-1">' + item.CursoId + '</div>';
                            html += '<div class="col-lg-7">' + item.Descricao + '</div>';
                            html += '<div class="col-lg-4"><a class="btnRemover" title="Remover Curso" id=' + item.CursoId + ' onclick="RemoverCurso(this)"><i class="danger btn-icon fa fa-minus-circle" style="color: #f55145; font-size: 25px; text-align:center"></i></a></div>';
                        });
                        $('#divCurso').html('');
                        $('#divCurso').append(html);
                        $("#ddlCurso").val('');
                        console.log(result);

                    },
                    error: function (result) {
                        Alert(result);
                    }
                });
            });


            //evento do botão incluir curso
            $("#ddlEstado").change(function () {
                BuscarMunicipio();
            });

        $("#btFoto").click(function () {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("OnSelecionaFoto_Click")'
                    });
            });

    </script>
    <script>

         function RemoverContrato(it)
            {
             var id = it.id;
               $.ajax({
                   type: "POST",
                   url: '@Url.Action("RemoverContrato")',
                   data: { id: id },
                   success: function (result) {
                       var html = '';
                       $.each(result, function (key, item) {
                           html += '<div class="col-lg-2 text-uppercase">' + item.Cargo + '</div>';
                           html += '<div class="col-lg-2">' + item.Matricula + '</div>';
                           html += '<div class="col-lg-2 text-uppercase">' + item.Descricao + '</div>';
                           html += '<div class="col-lg-2">' + (item.ManuseioBagagem == true ? 'Sim' : 'Não') + '</div>';
                           html += '<div class="col-lg-2">' + (item.OperadorPonteEmbarque == true ? 'Sim' : 'Não') + '</div>';
                           html += '<div class="col-lg-1">' + (item.FlagCcam == true ? 'Sim' : 'Não') + '</div>';
                           html += '<div class="col-lg-1"><a class="btnRemoverContrato" title="Remover Contrato" id=' + item.EmpresaContratoId + ' onclick="RemoverContrato(this)"><i class="danger btn-icon fa fa-minus-circle" style="color: #f55145; font-size: 25px; text-align:center"></i></a></div>';

                       });
                       $('#divContrato').html('');
                       $('#divContrato').append(html);
                       console.log(result);
                   },
                   error: function (result) {

                   }
                 });
        };

         function RemoverCurso(it)
            {
             var id = it.id;
               $.ajax({
                   type: "POST",
                   url: '@Url.Action("RemoverCurso")',
                   data: { id: id },
                   success: function (result) {
                       var html = '';
                       $.each(result, function (key, item) {
                           html += '<div class="col-lg-1">' + item.CursoId + '</div>';
                           html += '<div class="col-lg-7">' + item.Descricao + '</div>';
                           html += '<div class="col-lg-4"><a class="btnRemoverCurso" title="Remover Curso" id=' + item.CursoId + ' onclick="RemoverCurso(this)"><i class="material-icons danger">&#xE15C;</i></a></div>';

                       });
                       $('#divCurso').html('');
                       $('#divCurso').append(html);
                       console.log(result);
                   },
                   error: function (result) {

                   }
                 });
        };
    </script>

    <script>
        function BuscarMunicipio() {
            var id = $("#ddlEstado").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("BuscarMunicipios")',
                data: { id: id },
                success: function (result) {
                    var html = '<option value="">SELECIONE</option>';
                    $.each(result, function (key, item) {
                        html += '<option value=' + this.MunicipioId + '>' + this.Nome + '</option>';
                    });

                    $('#ddlMunicipio').html(html);
                    console.log(result);

                },
                error: function (result) {
                    Alert(result);
                }
            });
        }

    </script>
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#FotoUpload').attr('src', e.target.result);

                }

                reader.readAsDataURL(input.files[0]);
            }
        }


        $("#FotoColaborador").change(function () {
            readURL(this);
        });
    </script>

    <script>

        $(document).ready(function () {
            //Initialize tooltips
            $('.nav-tabs > li a[title]').tooltip();

            //Wizard
            $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {

                var $target = $(e.target);

                if ($target.parent().hasClass('disabled')) {
                    return false;
                }
            });

            $(".next-step").click(function (e) {

                var $active = $('.wizard .nav-tabs li.active');
                $active.next().removeClass('disabled');
                nextTab($active);

            });
            $(".prev-step").click(function (e) {

                var $active = $('.wizard .nav-tabs li.active');
                prevTab($active);

            });
        });

        function nextTab(elem) {
            $(elem).next().find('a[data-toggle="tab"]').click();
        }
        function prevTab(elem) {
            $(elem).prev().find('a[data-toggle="tab"]').click();
        }

        function BuscarEndereco() {
            var id = $("#Cep").val();
            $.get("http://apps.widenet.com.br/busca-cep/api/cep.json", { code: id }, function (result) {
                //if (result.State != 1) {
                //    alert(result.message || "Houve um erro desconhecido");
                //    return;
                //}
                $("#Endereco").val(result.address);
                $("#ddlBairro").val(result.district);
                $("#ddlEstado option").filter(function () {
                    return $(this).text() == result.state;
                }).prop('selected', true);
                BuscarMunicipio();
                $("#ddlMunicipio option").filter(function () {
                    return $(this).text() == result.city.toUpperCase();
                }).prop('selected', true);
                console.log(result);
            });
        };

    </script>

}
