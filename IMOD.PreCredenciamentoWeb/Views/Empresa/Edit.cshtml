@model IMOD.PreCredenciamentoWeb.Models.EmpresaViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .disabled {
        text-decoration: none;
        color: gray;
        cursor: default;
    }
</style>
<h3>Empresa</h3>
@using (Html.BeginForm("Edit", "Empresa", FormMethod.Post, new { enctype = "multipart/form-data", id = "myForm" }))
{
    @Html.AntiForgeryToken()

    <div class="table-wrapper">
        <div class="table-title">
            <div class="row">
                <div class="col-sm-8">
                    <h2><b>Empresa</b></h2>
                </div>
                <div class="col-sm-4">
                    @*<button type="submit" class="btn btn-success" id="btnSalvar"><i class="fa fa-save"></i> <span>Salvar Empresa</span></button>*@
                    @*<button type="submit" class="btn btn-success" id="btnSalvar"><i class="fa fa-save"></i> <span>Salvar Empresa</span></button>*@
                    <a href="~/Home/Index" class="submit btn btn-danger"><i class="fa fa-fw fa-sign-in"></i> <span>Voltar</span></a>
                </div>
            </div>
        </div>
        <fieldset class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item active">
                    <a class='' id="link1" data-toggle="tab" href="#home" role="tab" aria-controls="home"
                       aria-selected="true">Identificação</a>
                </li>
                <li class="nav-item">
                    <a class='disabled' id="link2" data-toggle="tab" href="#profile" role="tab" aria-controls="profile"
                       aria-selected="false">Endereço</a>
                </li>
                <li class="nav-item">
                    <a class='disabled' id="link3" data-toggle="tab" href="#contact" role="tab" aria-controls="contact"
                       aria-selected="false">Contatos</a>
                </li>
                <li class="nav-item" hidden="hidden">
                    <a class='' id="link4" data-toggle="tab" href="#obs" role="tab" aria-controls="registro"
                       aria-selected="false">Observação</a>
                </li>
                @*<li class="nav-item">
                        <a class="nav-link" id="cnh-tab" data-toggle="tab" href="#cnh" role="tab" aria-controls="cnh"
                           aria-selected="false">Características</a>
                    </li>*@
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class=" tab-pane active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    <br />
                    <div class="form-group" hidden="hidden">
                        @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Logo, new { htmlAttributes = new { @class = "form-control text-uppercase", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cnpj, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" contenteditable="false">
                            @Html.EditorFor(model => model.Cnpj, new { htmlAttributes = new { @class = "form-control text-uppercase", @readonly = "readonly" } })
                            @*@Html.TextBoxFor(model => model.Cnpj, new { @disabled = "disabled" })*@
                            @Html.ValidationMessageFor(model => model.Cnpj, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Nome", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Apelido, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Apelido, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Apelido", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Apelido, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Sigla, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" , Height="22" Width="45">
                            @Html.EditorFor(model => model.Sigla, new { htmlAttributes = new { @class = "form-control text-uppercase", @readonly = "readonly", @style = "width: 50px;" } })
                            @*@Html.TextBoxFor(model => model.Sigla, new { @disabled = "disabled",style="width: 50px;" })*@
                            @Html.ValidationMessageFor(model => model.Sigla, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.InsEst, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.InsEst, "", new { htmlAttributes = new { @class = "form-control text-uppercase", style = "width: 100px;", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.InsEst, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.InsMun, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.InsMun, "", new { htmlAttributes = new { @class = "form-control text-uppercase", style = "width: 100px;", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.InsMun, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Endereco", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control text-uppercase", style = "width: 100px;", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control", id = "Cep", style = "width: 100px;", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control text-uppercase", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Bairro", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div div class="form-group">
                            @Html.LabelFor(model => model.EstadoId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.EstadoId, ((IEnumerable<IMOD.Domain.Entities.Estados>)ViewBag.Estados).Select(option => new SelectListItem
                           {
                               Text = option.Nome,
                               Value = option.EstadoId.ToString(),
                               Selected = (Model != null) && (option.EstadoId == Model.EstadoId)
                           }), "Selecione", new { @class = "form-control text-uppercase" })
                                @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MunicipioId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MunicipioId, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                                @Html.ValidationMessageFor(model => model.MunicipioId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                </div>
                <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">
                    <br />
                    <fieldset>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Contato1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Contato1, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Contato1", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Contato1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefone1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Telefone1, new { htmlAttributes = new { @class = "form-control", id = "Telefone1", style = "width: 150px;", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Telefone1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Celular1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Celular1, new { htmlAttributes = new { @class = "form-control", @id = "celular", style = "width: 150px;", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Celular1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Celular2, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Celular2, new { htmlAttributes = new { @class = "form-control", @id = "celular", style = "width: 150px;", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Celular2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email1, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "Email1", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Email1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email2, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email2, new { htmlAttributes = new { @class = "form-control text-uppercase", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Email2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="tab-pane fade" id="obs" role="tabpanel" aria-labelledby="registro-tab">
                    <br />
                    <div class="form-group">                        
                        <div class="col-lg-12" style="align-content:center">
                            @Html.TextAreaFor(model => model.Obs, 7, 600, new { htmlAttributes = new {@class = "form-control"} })                            
                        </div>
                    </div>
                </div>
            </div>

        </fieldset>
    </div>
}

    <script>
        document.getElementById('Obs').disabled = true;
    </script>


<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")  
}
